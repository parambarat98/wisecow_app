name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
            docker login -u $DOCKERHUB_USERNAME -p $DOCKER_PASSWORD
        
      - name: Build and push Docker image
        run: |
           docker build -t wisecow:latest .
           docker tag wisecow:latest param9064/wisecow:latest
           docker push param9064/wisecow:latest

     
      - name: Create .kube directory
        run: |
          mkdir -p $HOME/.kube

      - name: Install Google Cloud SDK
        run: |
         curl -sSL https://sdk.cloud.google.com | bash
         exec -l $SHELL
      
      
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set Google Cloud project ID
        run: |
          
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Install gke-gcloud-auth-plugin
        run: |
           gcloud components update
           gcloud components install kubectl
           gcloud components install gke-gcloud-auth-plugin  

      - name: Enable Kubernetes Engine API
        run: |
          gcloud services enable container.googleapis.com



      - name: Get Cluster Credentials
        run: |
          gcloud container clusters get-credentials wisecow-cluster --zone us-central1-c

      # - name: Deploy TLS certificates as Kubernetes secret
      #   run: |
      #     kubectl create secret generic tls-certs --from-file=tls.crt --from-file=tls.key --dry-run=client -o yaml | kubectl apply -f -
      # - name: Decode and write kubeconfig
      #   run: |
      #     echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

    
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
         version: 'latest'

      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
        
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f cluster-issuer.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f ingress.yaml
